version: '3.9'

services:

  backend-rds:
    image: 440744228341.dkr.ecr.eu-north-1.amazonaws.com/backend-rds:latest
    container_name: backend-rds
    environment:
      - DB_NAME=mydatabase
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://dmc8vpoye26e6.cloudfront.net
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  backend-redis:
    image: 440744228341.dkr.ecr.eu-north-1.amazonaws.com/backend-redis:latest
    container_name: backend-redis
    environment:
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CORS_ALLOWED_ORIGINS=http://dmc8vpoye26e6.cloudfront.net
      - CORS_ALLOW_CREDENTIALS=true
    ports:
      - "8001:8001"
    depends_on:
      - redis

  postgres:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis-cache
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: app_network
