version: '3.9'

services:

  frontend:
    build:  
      context: ./frontend  
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend-rds

  backend-rds:
    build:  
      context: ./backend_rds  
      dockerfile: Dockerfile
    container_name: back-rds
    environment:
      DB_NAME: mydatabase
      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: postgres-db
      DB_PORT: 5432
      CORS_ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  backend-redis:
    build:  
      context: ./backend_redis  
      dockerfile: Dockerfile
    container_name: back-redis
    environment:
      REDIS_HOST: redis-cache
      REDIS_PORT: 6379
      REDIS_DB: 0
      CORS_ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "8001:8001"
    depends_on:
      - redis

  postgres:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  redis:
    image: redis:latest
    container_name: redis-cache
    volumes:
    - redis_data:/data


volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: app_network